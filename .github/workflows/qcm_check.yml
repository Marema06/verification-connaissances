name: CI Backend + Frontend

on:
  push:
  workflow_dispatch:

jobs:
  test-backend-and-frontend:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.10']
        node-version: ['18.x']

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          pip install -r requirements.txt


      - name: Run backend Flask server
        run: |
          nohup python3 backend/app.py > flask.log 2>&1 &
          sleep 5

      - name: Authentifier ngrok
        run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Run ngrok tunnel (custom domain)
        run: |
          nohup ngrok http 5000 --domain=lately-noble-tuna.ngrok-free.app --log=stdout > ngrok.log 2>&1 &
          sleep 5

      - name: Test Backend endpoint
        run: |
          curl -X POST "https://lately-noble-tuna.ngrok-free.app/generate_qcm" -H "Content-Type: application/json" -d '{"code_block":"print(\"Hello World\")"}'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend deps
        working-directory: frontend
        run: npm ci

      - name: Write Angular env (dev)
        working-directory: frontend
        run: |
          cat > src/environments/environment.ts <<EOF
          export const environment = {
            production: false,
            apiUrl: 'https://lately-noble-tuna.ngrok-free.app',
            apiToken: '${{ secrets.API_SECRET_TOKEN }}'
          };
          EOF

      - name: Build Angular app
        working-directory: frontend
        run: npm run build --if-present
