name: Génération QCM & PDF

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: 📦 Installer les dépendances
        run: npm install

      - name: 🤖 Générer QCM & PDF
        run: node src/index.js
        env:
          HF_API_KEY: ${{secrets.HF_API_KEY}}

      - name: 🐛 Debug workspace
        run: ls -lah

      - name: 📁 Préparer l'artefact PDF
        run: |
          mkdir -p upload
          [ -f exo_etudiant.pdf ] && cp exo_etudiant.pdf upload/ || exit 1

      - name: 📤 Upload PDF
        uses: actions/upload-artifact@v4
        with:
          name: qcm-pdf
          path: upload/exo_etudiant.pdf

      - name: 📝 Création Issue Rapport
        if: success()
        uses: actions/github-script@v6
        env:
          PDF_SIZE: ${{ steps.prepare-pdf.outputs.size }}
        with:
          script: |
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[Rapport] QCM Généré - ${new Date().toISOString().split('T')[0]}`,
                body: `## Rapport de Génération QCM\n\n` +
                      `✅ Génération terminée avec succès\n` +
                      `📅 Date: ${new Date().toLocaleString('fr-FR')}\n` +
                      `📄 Fichier: [exo_etudiant.pdf](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n` +
                      `Merci de vérifier le contenu.`,
                labels: ['rapport', 'qcm']
              });
            } catch (error) {
              core.setFailed('Erreur création issue: ' + error.message);
            }
