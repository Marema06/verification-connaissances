name: G√©n√©ration QCM & PDF

on:
  push:
    branches: [main]

permissions:
  contents: read
  issues: write  # Permission n√©cessaire pour cr√©er des issues

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout du code
        uses: actions/checkout@v3

      - name: üîß Configuration de Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'npm'

      - name: üì¶ Installation des d√©pendances
        run: npm install

      - name: ü§ñ G√©n√©ration du QCM et PDF
        run: node src/index.js
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}

      - name: üêõ V√©rification des fichiers g√©n√©r√©s
        run: |
          ls -lah
          [ -f exo_etudiant.pdf ] || echo "Le fichier PDF n'a pas √©t√© g√©n√©r√©"

      - name: üìÅ Pr√©paration de l'artefact
        run: |
          mkdir -p upload
          if [ -f exo_etudiant.pdf ]; then
            cp exo_etudiant.pdf upload/
            echo "PDF pr√™t pour upload"
          else
            echo "Erreur: Fichier PDF manquant"
            exit 1
          fi

      - name: üì§ Upload du PDF
        uses: actions/upload-artifact@v4
        with:
          name: qcm-pdf
          path: upload/exo_etudiant.pdf
          retention-days: 7

      - name: üìù Cr√©ation du rapport pour le professeur
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const pdfPath = 'exo_etudiant.pdf';
              const fs = require('fs');
              const pdfExists = fs.existsSync(pdfPath);
              const pdfSize = pdfExists ?
                (fs.statSync(pdfPath).size / 1024).toFixed(2) + ' Ko' :
                'Non disponible';

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `[Rapport QCM] ${new Date().toLocaleDateString('fr-FR')}`,
                body: `### Rapport de g√©n√©ration de QCM\n\n` +
                      `**Statut**: ‚úÖ Succ√®s\n` +
                      `**Date**: ${new Date().toLocaleString('fr-FR')}\n` +
                      `**Taille PDF**: ${pdfSize}\n` +
                      `**Lien du workflow**: [Voir l'ex√©cution](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})\n\n` +
                      `**Actions requises**:\n` +
                      `- V√©rifier le PDF dans les artefacts du workflow\n` +
                      `- Valider le contenu p√©dagogique`,
                labels: ['rapport', 'qcm', 'professeur']
              });
              console.log('Issue cr√©√©e avec succ√®s');
            } catch (error) {
              console.error('Erreur lors de la cr√©ation de l\'issue:', error);
              // Ne pas faire √©chouer le workflow pour cette √©tape
            }
